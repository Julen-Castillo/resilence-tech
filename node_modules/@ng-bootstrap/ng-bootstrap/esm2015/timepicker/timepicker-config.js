import { Injectable } from '@angular/core';
import * as i0 from "@angular/core";
/**
 * A configuration service for the [`NgbTimepicker`](#/components/timepicker/api#NgbTimepicker) component.
 *
 * You can inject this service, typically in your root component, and customize the values of its properties in
 * order to provide default values for all the timepickers used in the application.
 */
import * as ɵngcc0 from '@angular/core';
export class NgbTimepickerConfig {
    constructor() {
        this.meridian = false;
        this.spinners = true;
        this.seconds = false;
        this.hourStep = 1;
        this.minuteStep = 1;
        this.secondStep = 1;
        this.disabled = false;
        this.readonlyInputs = false;
        this.size = 'medium';
    }
}
NgbTimepickerConfig.ɵfac = function NgbTimepickerConfig_Factory(t) { return new (t || NgbTimepickerConfig)(); };
NgbTimepickerConfig.ɵprov = i0.ɵɵdefineInjectable({ factory: function NgbTimepickerConfig_Factory() { return new NgbTimepickerConfig(); }, token: NgbTimepickerConfig, providedIn: "root" });
(function () { (typeof ngDevMode === "undefined" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(NgbTimepickerConfig, [{
        type: Injectable,
        args: [{ providedIn: 'root' }]
    }], function () { return []; }, null); })();

//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoidGltZXBpY2tlci1jb25maWcuanMiLCJzb3VyY2VzIjpbIi4uLy4uLy4uL3NyYy90aW1lcGlja2VyL3RpbWVwaWNrZXItY29uZmlnLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBLE9BQU8sRUFBQyxVQUFVLEVBQUMsTUFBTSxlQUFlLENBQUM7QUFBQztBQUUxQztBQUFJO0FBQ3NHO0FBQ3pHO0FBQzRHO0FBQzdCLEdBQzdFOztBQUVILE1BQU0sT0FBTyxtQkFBbUI7QUFBRyxJQURuQztBQUFnQixRQUVkLGFBQVEsR0FBRyxLQUFLLENBQUM7QUFBQyxRQUNsQixhQUFRLEdBQUcsSUFBSSxDQUFDO0FBQUMsUUFDakIsWUFBTyxHQUFHLEtBQUssQ0FBQztBQUFDLFFBQ2pCLGFBQVEsR0FBRyxDQUFDLENBQUM7QUFBQyxRQUNkLGVBQVUsR0FBRyxDQUFDLENBQUM7QUFBQyxRQUNoQixlQUFVLEdBQUcsQ0FBQyxDQUFDO0FBQUMsUUFDaEIsYUFBUSxHQUFHLEtBQUssQ0FBQztBQUFDLFFBQ2xCLG1CQUFjLEdBQUcsS0FBSyxDQUFDO0FBQUMsUUFDeEIsU0FBSSxHQUFpQyxRQUFRLENBQUM7QUFBQyxLQUNoRDtBQUFDO2dIQUNGO0FBQUM7K0NBWkEsVUFBVSxTQUFDLEVBQUMsVUFBVSxFQUFFLE1BQU0sRUFBQzs7O2dEQUM1QjtBQUFDIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHtJbmplY3RhYmxlfSBmcm9tICdAYW5ndWxhci9jb3JlJztcclxuXHJcbi8qKlxyXG4gKiBBIGNvbmZpZ3VyYXRpb24gc2VydmljZSBmb3IgdGhlIFtgTmdiVGltZXBpY2tlcmBdKCMvY29tcG9uZW50cy90aW1lcGlja2VyL2FwaSNOZ2JUaW1lcGlja2VyKSBjb21wb25lbnQuXHJcbiAqXHJcbiAqIFlvdSBjYW4gaW5qZWN0IHRoaXMgc2VydmljZSwgdHlwaWNhbGx5IGluIHlvdXIgcm9vdCBjb21wb25lbnQsIGFuZCBjdXN0b21pemUgdGhlIHZhbHVlcyBvZiBpdHMgcHJvcGVydGllcyBpblxyXG4gKiBvcmRlciB0byBwcm92aWRlIGRlZmF1bHQgdmFsdWVzIGZvciBhbGwgdGhlIHRpbWVwaWNrZXJzIHVzZWQgaW4gdGhlIGFwcGxpY2F0aW9uLlxyXG4gKi9cclxuQEluamVjdGFibGUoe3Byb3ZpZGVkSW46ICdyb290J30pXHJcbmV4cG9ydCBjbGFzcyBOZ2JUaW1lcGlja2VyQ29uZmlnIHtcclxuICBtZXJpZGlhbiA9IGZhbHNlO1xyXG4gIHNwaW5uZXJzID0gdHJ1ZTtcclxuICBzZWNvbmRzID0gZmFsc2U7XHJcbiAgaG91clN0ZXAgPSAxO1xyXG4gIG1pbnV0ZVN0ZXAgPSAxO1xyXG4gIHNlY29uZFN0ZXAgPSAxO1xyXG4gIGRpc2FibGVkID0gZmFsc2U7XHJcbiAgcmVhZG9ubHlJbnB1dHMgPSBmYWxzZTtcclxuICBzaXplOiAnc21hbGwnIHwgJ21lZGl1bScgfCAnbGFyZ2UnID0gJ21lZGl1bSc7XHJcbn1cclxuIl19