import { NgModule } from '@angular/core';
import { CommonModule } from '@angular/common';
import { NgbPagination, NgbPaginationEllipsis, NgbPaginationFirst, NgbPaginationLast, NgbPaginationNext, NgbPaginationNumber, NgbPaginationPrevious, NgbPaginationPages } from './pagination';
import * as ɵngcc0 from '@angular/core';
export { NgbPagination, NgbPaginationEllipsis, NgbPaginationFirst, NgbPaginationLast, NgbPaginationNext, NgbPaginationNumber, NgbPaginationPrevious, NgbPaginationPages } from './pagination';
export { NgbPaginationConfig } from './pagination-config';
const DIRECTIVES = [
    NgbPagination, NgbPaginationEllipsis, NgbPaginationFirst, NgbPaginationLast, NgbPaginationNext, NgbPaginationNumber,
    NgbPaginationPrevious, NgbPaginationPages
];
export class NgbPaginationModule {
}
NgbPaginationModule.ɵmod = ɵngcc0.ɵɵdefineNgModule({ type: NgbPaginationModule });
NgbPaginationModule.ɵinj = ɵngcc0.ɵɵdefineInjector({ factory: function NgbPaginationModule_Factory(t) { return new (t || NgbPaginationModule)(); }, imports: [[CommonModule]] });
(function () { (typeof ngJitMode === "undefined" || ngJitMode) && ɵngcc0.ɵɵsetNgModuleScope(NgbPaginationModule, { declarations: function () { return [NgbPagination, NgbPaginationEllipsis, NgbPaginationFirst, NgbPaginationLast, NgbPaginationNext, NgbPaginationNumber,
        NgbPaginationPrevious, NgbPaginationPages]; }, imports: function () { return [CommonModule]; }, exports: function () { return [NgbPagination, NgbPaginationEllipsis, NgbPaginationFirst, NgbPaginationLast, NgbPaginationNext, NgbPaginationNumber,
        NgbPaginationPrevious, NgbPaginationPages]; } }); })();
(function () { (typeof ngDevMode === "undefined" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(NgbPaginationModule, [{
        type: NgModule,
        args: [{ declarations: DIRECTIVES, exports: DIRECTIVES, imports: [CommonModule] }]
    }], null, null); })();

//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoicGFnaW5hdGlvbi5tb2R1bGUuanMiLCJzb3VyY2VzIjpbIi4uLy4uLy4uL3NyYy9wYWdpbmF0aW9uL3BhZ2luYXRpb24ubW9kdWxlLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBLE9BQU8sRUFBQyxRQUFRLEVBQUMsTUFBTSxlQUFlLENBQUM7QUFDdkMsT0FBTyxFQUFDLFlBQVksRUFBQyxNQUFNLGlCQUFpQixDQUFDO0FBRTdDLE9BQU8sRUFDTCxhQUFhLEVBQ2IscUJBQXFCLEVBQ3JCLGtCQUFrQixFQUNsQixpQkFBaUIsRUFDakIsaUJBQWlCLEVBQ2pCLG1CQUFtQixFQUNuQixxQkFBcUIsRUFDckIsa0JBQWtCLEVBQ25CLE1BQU0sY0FBYyxDQUFDOztBQUV0QixPQUFPLEVBQ0wsYUFBYSxFQUNiLHFCQUFxQixFQUNyQixrQkFBa0IsRUFDbEIsaUJBQWlCLEVBQ2pCLGlCQUFpQixFQUNqQixtQkFBbUIsRUFDbkIscUJBQXFCLEVBQ3JCLGtCQUFrQixFQUNuQixNQUFNLGNBQWMsQ0FBQztBQUN0QixPQUFPLEVBQUMsbUJBQW1CLEVBQUMsTUFBTSxxQkFBcUIsQ0FBQztBQUV4RCxNQUFNLFVBQVUsR0FBRztBQUFFLElBQ25CLGFBQWEsRUFBRSxxQkFBcUIsRUFBRSxrQkFBa0IsRUFBRSxpQkFBaUIsRUFBRSxpQkFBaUIsRUFBRSxtQkFBbUI7QUFBRSxJQUNySCxxQkFBcUIsRUFBRSxrQkFBa0I7QUFBQyxDQUMzQyxDQUFDO0FBR0YsTUFBTSxPQUFPLG1CQUFtQjtBQUFHOytDQURsQyxRQUFRLFNBQUMsRUFBQyxZQUFZLEVBQUU7T0FBVSxFQUFFLE9BQU8sRUFBRSxVQUFVLEVBQUUsT0FBTyxFQUFFLENBQUMsWUFBWSxDQUFDLEVBQUM7Ozs7Ozs7MEJBQzlFO0FBQUMiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQge05nTW9kdWxlfSBmcm9tICdAYW5ndWxhci9jb3JlJztcclxuaW1wb3J0IHtDb21tb25Nb2R1bGV9IGZyb20gJ0Bhbmd1bGFyL2NvbW1vbic7XHJcblxyXG5pbXBvcnQge1xyXG4gIE5nYlBhZ2luYXRpb24sXHJcbiAgTmdiUGFnaW5hdGlvbkVsbGlwc2lzLFxyXG4gIE5nYlBhZ2luYXRpb25GaXJzdCxcclxuICBOZ2JQYWdpbmF0aW9uTGFzdCxcclxuICBOZ2JQYWdpbmF0aW9uTmV4dCxcclxuICBOZ2JQYWdpbmF0aW9uTnVtYmVyLFxyXG4gIE5nYlBhZ2luYXRpb25QcmV2aW91cyxcclxuICBOZ2JQYWdpbmF0aW9uUGFnZXNcclxufSBmcm9tICcuL3BhZ2luYXRpb24nO1xyXG5cclxuZXhwb3J0IHtcclxuICBOZ2JQYWdpbmF0aW9uLFxyXG4gIE5nYlBhZ2luYXRpb25FbGxpcHNpcyxcclxuICBOZ2JQYWdpbmF0aW9uRmlyc3QsXHJcbiAgTmdiUGFnaW5hdGlvbkxhc3QsXHJcbiAgTmdiUGFnaW5hdGlvbk5leHQsXHJcbiAgTmdiUGFnaW5hdGlvbk51bWJlcixcclxuICBOZ2JQYWdpbmF0aW9uUHJldmlvdXMsXHJcbiAgTmdiUGFnaW5hdGlvblBhZ2VzXHJcbn0gZnJvbSAnLi9wYWdpbmF0aW9uJztcclxuZXhwb3J0IHtOZ2JQYWdpbmF0aW9uQ29uZmlnfSBmcm9tICcuL3BhZ2luYXRpb24tY29uZmlnJztcclxuXHJcbmNvbnN0IERJUkVDVElWRVMgPSBbXHJcbiAgTmdiUGFnaW5hdGlvbiwgTmdiUGFnaW5hdGlvbkVsbGlwc2lzLCBOZ2JQYWdpbmF0aW9uRmlyc3QsIE5nYlBhZ2luYXRpb25MYXN0LCBOZ2JQYWdpbmF0aW9uTmV4dCwgTmdiUGFnaW5hdGlvbk51bWJlcixcclxuICBOZ2JQYWdpbmF0aW9uUHJldmlvdXMsIE5nYlBhZ2luYXRpb25QYWdlc1xyXG5dO1xyXG5cclxuQE5nTW9kdWxlKHtkZWNsYXJhdGlvbnM6IERJUkVDVElWRVMsIGV4cG9ydHM6IERJUkVDVElWRVMsIGltcG9ydHM6IFtDb21tb25Nb2R1bGVdfSlcclxuZXhwb3J0IGNsYXNzIE5nYlBhZ2luYXRpb25Nb2R1bGUge1xyXG59XHJcbiJdfQ==